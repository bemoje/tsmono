export const INTEGER_META_DATA = [
  {
    sign: 'signed',
    bits: 8,
    name: 'byte',
    range: [-128, 128],
    nativeBinaryType: 'Int8Array',
    bytes: 1,
  },
  {
    sign: 'unsigned',
    bits: 8,
    name: 'octet',
    range: [0, 255],
    nativeBinaryType: 'Uint8Array',
    bytes: 1,
  },
  {
    sign: 'signed',
    bits: 16,
    name: 'short',
    range: [-32768, 32767],
    nativeBinaryType: 'Int16Array',
    bytes: 2,
  },
  {
    sign: 'unsigned',
    bits: 16,
    name: 'unsigned short',
    range: [0, 65535],
    nativeBinaryType: 'Uint16Array',
    bytes: 2,
  },
  {
    sign: 'signed',
    bits: 32,
    name: 'long',
    range: [-2147483648, 2147483647],
    nativeBinaryType: 'Int32Array',
    bytes: 4,
  },
  {
    sign: 'unsigned',
    bits: 32,
    name: 'unsigned long',
    range: [0, 4294967295],
    nativeBinaryType: 'Uint32Array',
    bytes: 4,
  },
  {
    sign: 'signed',
    bits: 32,
    name: 'unrestricted float',
    range: [-3.4 * 10 ** 38, 3.4 * 10 ** 38],
    nativeBinaryType: 'Float32Array',
    bytes: 4,
  },
  {
    sign: 'signed',
    bits: 64,
    name: 'unrestricted double',
    range: [(BigInt(-18) * BigInt(10 ** 308)) / BigInt(10), (BigInt(18) * BigInt(10 ** 308)) / BigInt(10)],
    nativeBinaryType: 'Float64Array',
    bytes: 8,
  },
  {
    sign: 'signed',
    bits: 64,
    name: 'bigint',
    range: [BigInt(-(2 ** 63)), BigInt(2 ** 63 - 1)],
    nativeBinaryType: 'BigInt64Array',
    bytes: 8,
  },
  {
    sign: 'unsigned',
    bits: 64,
    name: 'bigint',
    range: [BigInt(0), BigInt(2 ** 64) - BigInt(1)],
    nativeBinaryType: 'BigUint64Array',
    bytes: 8,
  },
]
