{"version":3,"file":"index.ts","sources":["util/getUserInputFromEditorSync.ts","util/parseString.ts","core/ConfigSetting.ts","core/Config.ts","util/getUserInputFromEditor.ts","util/parseBoolean.ts","util/parseDirectories.ts","util/parseInteger.ts","util/parseNumber.ts"],"sourcesContent":["import { deleteDirectorySafeSync } from '@bemoje/fs'\nimport { execSync } from 'child_process'\nimport fs from 'fs'\nimport path from 'path'\nimport { IGetUserInputFromEditorOptions } from './IGetUserInputFromEditorOptions'\n\nexport function getUserInputFromEditorSync(options: IGetUserInputFromEditorOptions): string {\n  const { appdataDirectory, editor, currentContent } = options\n  const tempdir = path.join(appdataDirectory, 'temp')\n  fs.mkdirSync(tempdir, { recursive: true })\n  const tempfile = path.join(tempdir, Date.now() + (options.extension || '.txt'))\n  fs.writeFileSync(tempfile, currentContent, 'utf8')\n  execSync(`${editor} ${tempfile}`, { stdio: 'inherit' })\n  const userInput = fs.readFileSync(tempfile, 'utf8')\n  deleteDirectorySafeSync(tempdir)\n  return userInput\n}\n","export function parseString(string: string): string {\n  return string.trim()\n}\n","import { IConfigSetting } from './IConfigSetting'\n\nexport class ConfigSetting implements IConfigSetting {\n  name: string\n  description: string\n  default: any\n  required: boolean\n  parse: (string: string) => any\n\n  constructor(name: string, options: IConfigSetting) {\n    this.name = name\n    this.description = options.description ?? ''\n    this.default = options.default ?? ''\n    this.required = options.required ?? false\n    this.parse = options.parse\n  }\n}\n","import getAppDataPath from 'appdata-path'\nimport { Command } from 'commander'\nimport fs from 'fs'\nimport { mkdirpSync } from 'mkdirp'\nimport path from 'path'\nimport { getUserInputFromEditorSync } from '../util/getUserInputFromEditorSync'\nimport { parseString } from '../util/parseString'\nimport { ConfigSetting } from './ConfigSetting'\nimport { IConfigSetting } from './IConfigSetting'\nimport { IConfigSettings } from './IConfigSettings'\n\nexport class Config {\n  appdataDirectory: string\n  definitions: IConfigSettings\n  settings: Record<string, any>\n\n  constructor(appAuthor: string, appName: string, definitions: Record<string, IConfigSetting>) {\n    definitions = {\n      editor: {\n        description: 'The editor to use for example when editing config settings as JSON.',\n        default: 'code -w',\n        required: true,\n        parse: parseString,\n      },\n      ...definitions,\n    }\n    this.appdataDirectory = path.join(getAppDataPath(), appAuthor, appName)\n    this.definitions = Object.entries(definitions).reduce((accum: IConfigSettings, [name, options]) => {\n      accum[name] = new ConfigSetting(name, options)\n      return accum\n    }, {} as IConfigSettings)\n    this.ensureConfigFileExists()\n    this.settings = JSON.parse(fs.readFileSync(this.configFilepath, 'utf8')) as Record<keyof typeof definitions, any>\n  }\n\n  get configFilepath() {\n    return path.join(this.appdataDirectory, 'config.json')\n  }\n\n  initialize(program: Command) {\n    const accepted = 'Accepted values are: ' + Object.keys(this.definitions).join(', ')\n\n    program\n      .command('config')\n      .description('View / edit the settings as JSON in the defined editor.')\n      .action(async () => {\n        const json = JSON.stringify(this.settings, null, 1)\n        const newJson = getUserInputFromEditorSync({\n          appdataDirectory: this.appdataDirectory,\n          editor: this.settings.editor,\n          currentContent: json,\n          extension: '.json',\n        })\n        this.settings = JSON.parse(newJson)\n        this.saveConfigFile()\n      })\n\n    program\n      .command('config-list')\n      .description('List the current config settings.')\n      .argument('[setting]', 'The name of the setting. Omit to list all settings. ' + accepted)\n      .action(() => this.print())\n\n    program\n      .command('config-reset')\n      .description('Reset one or all settings to their default values.')\n      .argument('[setting]', 'The name of the setting. Omit to reset all settings. ' + accepted)\n      .action((setting?: string) => this.reset(setting))\n\n    program\n      .command('config-set')\n      .description('Configure a setting of the config.')\n      .argument('<setting>', 'The name of the setting. ' + accepted)\n      .argument('<value>', 'The value to assign.')\n      .action((setting: string, value: string) => this.set(setting, value))\n\n    program\n      .command('appdata')\n      .description('Get the directory to your data.')\n      .action(() => console.log('APPDATA: ' + this.appdataDirectory))\n  }\n\n  ensureConfigFileExists() {\n    if (!fs.existsSync(this.configFilepath)) {\n      this.settings = Object.fromEntries(\n        Object.entries(this.definitions).map(([name, definition]) => {\n          return [name, definition.default]\n        }),\n      )\n      this.saveConfigFile()\n    }\n  }\n\n  saveConfigFile() {\n    mkdirpSync(this.appdataDirectory)\n    fs.writeFileSync(this.configFilepath, JSON.stringify(this.settings, null, 1))\n  }\n\n  set(setting: string, value: string) {\n    const definition = this.definitions[setting]\n    if (!definition) {\n      console.log(`The '${setting}' setting not recognized.`)\n      return\n    }\n    this.settings[setting] = definition.parse(value || JSON.stringify(this))\n    this.saveConfigFile()\n    console.log(`The '${setting}' setting has been configured.`)\n    this.print(setting)\n  }\n\n  print(setting?: string) {\n    if (setting) {\n      const definition = this.definitions[setting]\n      if (definition) {\n        console.log({\n          name: definition.name,\n          description: definition.description,\n          required: definition.required,\n          default: definition.default,\n          value: this.settings[definition.name],\n        })\n        return\n      }\n    }\n    Object.values(this.definitions).forEach((o) => {\n      console.log({\n        name: o.name,\n        description: o.description,\n        required: o.required,\n        default: o.default,\n        value: this.settings[o.name],\n      })\n    })\n  }\n\n  protected reset(setting?: string) {\n    if (setting !== undefined) {\n      const definition = this.definitions[setting]\n      if (!definition) {\n        console.log(`The '${setting}' setting not recognized.`)\n        return\n      }\n      this.settings[setting] = definition.default\n      console.log(`The '${setting}' setting has been reset to its default value.`)\n    } else {\n      Object.values(this.definitions).forEach((o) => {\n        this.settings[o.name] = o.default\n        console.log(`The '${o.name}' setting has been reset to its default value.`)\n      })\n    }\n    this.print(setting)\n    this.saveConfigFile()\n  }\n\n  assertNoMissingRequired(): void {\n    const missing = Object.values(this.definitions).filter(\n      (o) => o.required && (this.settings[o.name] === '' || this.settings[o.name] === undefined),\n    )\n    if (missing.length) {\n      console.log(\n        `The following required settings are missing: ${missing\n          .map((o) => o.name)\n          .join(\n            ', ',\n          )}.\\nUse the \"config-set\" command to configure them.\\nUse the \"config-list\" command to list all settings.`,\n      )\n      process.exit()\n    }\n  }\n}\n","import { wait } from '@bemoje/async'\nimport { deleteDirectorySafe } from '@bemoje/fs'\nimport { execSync } from 'child_process'\nimport fs from 'fs'\nimport path from 'path'\nimport { IGetUserInputFromEditorOptions } from './IGetUserInputFromEditorOptions'\n\nexport async function getUserInputFromEditor(options: IGetUserInputFromEditorOptions): Promise<string> {\n  const { appdataDirectory, editor, currentContent, extension } = options\n  const tempdir = path.join(appdataDirectory, 'temp')\n  await fs.promises.mkdir(tempdir, { recursive: true })\n  const tempfile = path.join(tempdir, Date.now() + (extension || '.txt'))\n  await fs.promises.writeFile(tempfile, currentContent, 'utf8')\n  execSync(`${editor} ${tempfile}`, { stdio: 'inherit' })\n  await wait(100)\n  const userInput = await fs.promises.readFile(tempfile, 'utf8')\n  await deleteDirectorySafe(tempdir)\n  return userInput\n}\n","export function parseBoolean(string: string): boolean {\n  if (string !== 'true' && string !== 'false') {\n    console.error(`The value ${string} is not a valid boolean value. Accepted values are 'true' and 'false'.`)\n    process.exit(1)\n  }\n  return string === 'true'\n}\n","import fs from 'fs'\n\nexport function parseDirectories(string: string): string[] {\n  const arr = string.split(';').map((d) => d.trim())\n  arr.forEach((dir) => {\n    if (!fs.existsSync(dir)) {\n      console.error(`The directory ${dir} does not exist.`)\n      process.exit(1)\n    }\n    if (!fs.statSync(dir).isDirectory()) {\n      console.error(`The path ${dir} is not a directory.`)\n      process.exit(1)\n    }\n  })\n  return arr\n}\n","export function parseInteger(string: string): number {\n  const n = Number(string)\n  if (!Number.isInteger(n)) {\n    console.error(`The value ${string} is not an integer.`)\n    process.exit(1)\n  }\n  return n\n}\n","export function parseNumber(string: string): number {\n  const n = Number(string)\n  if (isNaN(n) || !Number.isFinite(n)) {\n    console.error(`The value ${string} is not a valid number.`)\n    process.exit(1)\n  }\n  return n\n}\n"],"names":["getUserInputFromEditorSync","options","appdataDirectory","editor","currentContent","tempdir","path","join","fs","mkdirSync","recursive","tempfile","Date","now","extension","writeFileSync","execSync","stdio","userInput","readFileSync","deleteDirectorySafeSync","parseString","string","trim","ConfigSetting","constructor","name","description","_a","default","_b","required","_c","parse","Config","appAuthor","appName","definitions","Object","assign","getAppDataPath","entries","reduce","accum","ensureConfigFileExists","settings","JSON","configFilepath","initialize","program","accepted","keys","command","action","__awaiter","json","stringify","newJson","saveConfigFile","argument","print","setting","reset","value","set","console","log","existsSync","fromEntries","map","definition","mkdirpSync","values","forEach","o","assertNoMissingRequired","missing","filter","length","process","exit","getUserInputFromEditor","promises","mkdir","writeFile","wait","readFile","deleteDirectorySafe","parseBoolean","error","parseDirectories","arr","split","d","dir","statSync","isDirectory","parseInteger","n","Number","isInteger","parseNumber","isNaN","isFinite"],"mappings":"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"}